# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: CI dotnet tests

on:
  workflow_call:
    inputs:
      affected_changes:
        description: Affected projects
        required: true
        type: string
      print_debug_output:
        description: Enable debug logging
        required: false
        type: string

jobs:
  build_matrix:
    name: Build matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find testprojects in affected projects
        id: set-matrix
        shell: pwsh
        run: |
          $affectedProjects = '${{ inputs.affected_changes  }}' | ConvertFrom-Json
          # $matrix = $affectedProjects | Where-Object {$_.Name -like '*Tests*'} | Select-Object -ExpandProperty Filepath  | ConvertTo-Json -Compress

          # I couldn't find a better way to lowercase keys in a hashtable
          $matrix = @()
          foreach ($project in $affectedProjects) {
            if ($project.Name -like '*Tests*') {
              $matrix += [PSCustomObject]@{
                name           = $project.Name
                filepath       = $project.FilePath
                assembly_name  = "Energinet.DataHub.$($project.Name).dll"
                dotnet_version = "net8.0"
              } 

              # We need to add the test project's 'twin' project to the matrix as well because it may be needed by TestCommon when running integrationtests
              $sut = $project.Name -replace ".Tests", ""
              $sutFilePath = $project.FilePath -replace ".Tests", "" 

              # Some projects such as 'SubsystemTests' do not have a 'twin' project we need to build
              if (Test-Path $sutFilePath) {
                $matrix += [PSCustomObject]@{
                  name           = $sut
                  filepath       = $sutFilePath
                  assembly_name  = "Energinet.DataHub.$($sut).dll"
                  dotnet_version = "net8.0"
                }               
              } else {
                Write-Host "No twin project found in path $sutFilePath"
              }
            }
          }
          $matrixJson = $matrix | ConvertTo-Json -Compress

          "matrix=$matrixJson" >> $env:GITHUB_OUTPUT

  print_matrix:
    if: ${{ inputs.print_debug_output == 'true' }}
    name: Print matrix
    runs-on: ubuntu-latest
    needs: build_matrix
    steps:
      - name: Print
        shell: pwsh
        run: |
          Write-Host 'Print matrix'
          $matrix = '${{needs.build_matrix.outputs.matrix}}' | ConvertFrom-Json | ConvertTo-Json
          Write-Host $matrix

  build_tests_in_project:
    name: Build ${{ matrix.project.name }}
    runs-on: ubuntu-latest
    needs: build_matrix
    strategy:
      fail-fast: false
      matrix: 
        project: ${{fromJson(needs.build_matrix.outputs.matrix)}} 
    env:
      OUTPUT_PATH: ${{ github.workspace }}/source/${{ matrix.project.name}}/bin/Release/${{matrix.project.dotnet_version}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ github.event.pull_request.number }}-${{ matrix.project.name}} # Cache per PR

      - name: Build ${{ matrix.project.name }}
        run: |
          dotnet publish \
            '${{ matrix.project.filepath }}' \
            --configuration Release \
            --output '${{ env.OUTPUT_PATH }}' \
            -p:ErrorOnDuplicatePublishOutputFiles=false  # To avoid the error "Found multiple publish output files with the same relative path"

          # ls ${{ env.OUTPUT_PATH}}

      - uses: actions/upload-artifact@v4
        with:
          retention-days: 2
          name: pm-tests-${{ matrix.project.name }}-${{ github.event.pull_request.number }}
          path: ${{ env.OUTPUT_PATH }}/*

  # integration_tests:
  #   needs: [
  #     build_matrix,
  #     build_tests_in_project
  #   ]
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       project: ${{fromJson(needs.build_matrix.outputs.matrix)}}      
  #   uses: Energinet-DataHub/.github/.github/workflows/dotnet-postbuild-test-monorepo.yml@kerbou/2524-build-brs-pipeline
  #   with:
  #     azure_integrationtest_tenant_id: ${{ vars.integration_test_azure_tenant_id }}
  #     azure_integrationtest_subscription_id: ${{ vars.integration_test_azure_subscription_id }}
  #     azure_integrationtest_spn_id: ${{ vars.integration_test_azure_spn_id_oidc }}
  #     azure_keyvault_url: ${{ vars.integration_test_azure_keyvault_url }}
  #     environment: AzureAuth
  #     run_integration_tests: true 
  #     tests_filter_expression: empty # Means skip
  #     use_azure_functions_tools: true
  #     aspnetcore_test_contentroot_variable_name: empty
  #     aspnetcore_test_contentroot_variable_value: empty
  #     # Matrix parameters
  #     testproject_artifact_name: pm-tests-${{ matrix.project.name }}-${{ github.event.pull_request.number }}
  #     testproject_sut_artifact_name: pm-tests-${{ matrix.project.sut_name }}-${{ github.event.pull_request.number }}

  #     testproject_name: ${{ matrix.project.name }}
  #     tests_dll_file_path: \source\${{ matrix.project.name}}\bin\Release\${{matrix.project.dotnet_version}}\${{ matrix.project.assembly_name }}