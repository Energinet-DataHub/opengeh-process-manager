# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: CI orchestrator (mono-repo)

on:
  pull_request:
    branches:
      - main

jobs:
  #
  # License and Markdown Check
  #
  ci_base:
    uses: Energinet-DataHub/.github/.github/workflows/ci-base.yml@v14
    secrets:
      dh3serviceaccount_privatekey: ${{ secrets.dh3serviceaccount_privatekey }}

  #
  # Detect changes to start relevant workflows
  #
  changes:
    uses: ./.github/workflows/detect-changes.yml

  ci_nuget:
    needs: changes
    if: ${{ needs.changes.outputs.nuget_packages == 'true' }}
    uses: ./.github/workflows/processmanager-client-bundle-publish.yml
    name: Build NuGet packages
    secrets: inherit

  ci_core:
    if: ${{ fromJson(needs.changes.outputs.job_context).core == 'true' }}
    needs: changes
    uses: ./.github/workflows/ci-dotnet.yml
    name: Build Core
    with:
      release_name: process_manager_core
      project_file: source/ProcessManager/ProcessManager.csproj

  ci_orchestrations:
    if: ${{ fromJson(needs.changes.outputs.job_context).orchestrations == 'true' }}
    needs: changes
    uses: ./.github/workflows/ci-dotnet.yml
    name: Build Orchestrations
    with:
      release_name: process_manager_orchestrations
      project_file: source/ProcessManager.Orchestrations/ProcessManager.Orchestrations.csproj

  ci_example_orchestrations:
    if: ${{ fromJson(needs.changes.outputs.job_context).orchestrations == 'true' }}
    needs: changes
    uses: ./.github/workflows/ci-dotnet.yml
    name: Build Example Orchestrations
    with:
      release_name: example_orchestrations
      project_file: source/Example.Orchestrations/Example.Orchestrations.csproj
        
  ci_dbmigrations:
    if: ${{ fromJson(needs.changes.outputs.job_context).dbmigrations == 'true' }}
    needs: changes
    uses: ./.github/workflows/ci-dotnet.yml
    name: Build database migrations
    with:
      release_name: process_manager_dbmigrations
      project_file: source/ProcessManager.DatabaseMigration/ProcessManager.DatabaseMigration.csproj

  ci_run_tests:
    needs: changes
    uses: ./.github/workflows/ci-dotnet-runtests.yml
    name: Run tests
    with:
      affected_changes: ${{ needs.changes.outputs.affected_changes }}
      print_debug_output: true

  #
  # Branch policy status check
  #

  allow_merge_ci_orchestrator:
    runs-on: ubuntu-latest
    needs:
      [
        ci_base,
        changes,
        ci_nuget,
        ci_core,
        ci_orchestrations,
        ci_example_orchestrations,
        ci_dbmigrations,
        ci_run_tests
      ]
    if: |
      always()
    steps:
      - name: Verify if merge is allowed
        run: |
          echo "${{ toJSON(needs) }}"
          if [[ ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }} = true ]]; then
              echo "Failed"
              exit 1
          fi
